head(GSPC)
View(GSPC)
setwd("~/R/Dev_dataproducts_coursera/telephone")
shiny::runApp()
shiny::runApp()
library(datasets)
shiny::runApp('~/R/Dev_dataproducts_coursera/BMI')
?bmi
shiny::runApp('~/R/Dev_dataproducts_coursera/BMI')
shiny::runApp('~/R/Dev_dataproducts_coursera/BMI')
shiny::runApp('~/R/Dev_dataproducts_coursera/BMI')
shiny::runApp('~/R/Dev_dataproducts_coursera/BMI')
shiny::runApp('~/R/Dev_dataproducts_coursera/BMI')
shiny::runApp('~/R/Dev_dataproducts_coursera/BMI')
setwd("~/R/Dev_dataproducts_coursera/newBMI")
shiny::runApp()
# This is the user-interface definition of a Shiny web application.
# You can find out more about building applications with Shiny here:
#
# http://www.rstudio.com/shiny/
#
library(shiny)
# Fix tag("div", list(...)) : could not find function "showOut…
library(rCharts)
shinyUI(
navbarPage("Storm Database Explorer",
tabPanel("Plot",
sidebarPanel(
sliderInput("range",
"Range:",
min = 1950,
max = 2011,
value = c(1993, 2011),
format="####"),
uiOutput("evtypeControls"),
actionButton(inputId = "clear_all", label = "Clear selection", icon = icon("check-square")),
actionButton(inputId = "select_all", label = "Select all", icon = icon("check-square-o"))
),
mainPanel(
tabsetPanel(
# Data by state
tabPanel(p(icon("map-marker"), "By state"),
column(3,
wellPanel(
radioButtons(
"populationCategory",
"Population impact category:",
c("Both" = "both", "Injuries" = "injuries", "Fatalities" = "fatalities"))
)
),
column(3,
wellPanel(
radioButtons(
"economicCategory",
"Economic impact category:",
c("Both" = "both", "Property damage" = "property", "Crops damage" = "crops"))
)
),
column(7,
plotOutput("populationImpactByState"),
plotOutput("economicImpactByState")
)
),
# Time series data
tabPanel(p(icon("line-chart"), "By year"),
h4('Number of events by year', align = "center"),
showOutput("eventsByYear", "nvd3"),
h4('Population impact by year', align = "center"),
showOutput("populationImpact", "nvd3"),
h4('Economic impact by year', align = "center"),
showOutput("economicImpact", "nvd3")
),
# Data
tabPanel(p(icon("table"), "Data"),
dataTableOutput(outputId="table"),
downloadButton('downloadData', 'Download')
)
)
)
),
tabPanel("About",
mainPanel(
includeMarkdown("include.md")
)
)
)
)
# This is the user-interface definition of a Shiny web application.
# You can find out more about building applications with Shiny here:
#
# http://www.rstudio.com/shiny/
#
library(shiny)
# Fix tag("div", list(...)) : could not find function "showOut…
library(rCharts)
shinyUI(
navbarPage("Storm Database Explorer",
tabPanel("Plot",
sidebarPanel(
sliderInput("range",
"Range:",
min = 1950,
max = 2011,
value = c(1993, 2011),
format="####"),
uiOutput("evtypeControls"),
actionButton(inputId = "clear_all", label = "Clear selection", icon = icon("check-square")),
actionButton(inputId = "select_all", label = "Select all", icon = icon("check-square-o"))
),
mainPanel(
tabsetPanel(
# Data by state
tabPanel(p(icon("map-marker"), "By state"),
column(3,
wellPanel(
radioButtons(
"populationCategory",
"Population impact category:",
c("Both" = "both", "Injuries" = "injuries", "Fatalities" = "fatalities"))
)
),
column(3,
wellPanel(
radioButtons(
"economicCategory",
"Economic impact category:",
c("Both" = "both", "Property damage" = "property", "Crops damage" = "crops"))
)
),
column(7,
plotOutput("populationImpactByState"),
plotOutput("economicImpactByState")
)
),
# Time series data
tabPanel(p(icon("line-chart"), "By year"),
h4('Number of events by year', align = "center"),
showOutput("eventsByYear", "nvd3"),
h4('Population impact by year', align = "center"),
showOutput("populationImpact", "nvd3"),
h4('Economic impact by year', align = "center"),
showOutput("economicImpact", "nvd3")
),
# Data
tabPanel(p(icon("table"), "Data"),
dataTableOutput(outputId="table"),
downloadButton('downloadData', 'Download')
)
)
)
),
tabPanel("About",
mainPanel(
# includeMarkdown("include.md")
)
)
)
)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('~/R/Dev_dataproducts_coursera/BMI')
getwd()
shiny::runApp()
setwd("~/R/Dev_dataproducts_coursera/newBMI")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
# This is the user-interface definition of a Shiny web application.
# You can find out more about building applications with Shiny here:
#
# http://www.rstudio.com/shiny/
#
library(shiny)
library(rCharts)
shinyUI(
navbarPage("One stop health calculator",
tabPanel(p(icon("flash"), "Body Mass Index (BMI) Calculator"),
sidebarPanel(
numericInput('age', 'Type your age in years', 25, min = 1, max = 100, step = 1),
numericInput('weight', 'Type your weight in kilograms', 80) ,
numericInput('height', 'Type your height in metres', 1.70, min = 0.2, max = 3, step = 0.01),
submitButton('Submit')
),
mainPanel(
p('The Body mass index (BMI) is a measure of body fat based on height and weight that applies to adult men and women.'),
p('The World Health Organization (WHO) proposes the following classification:'),
tags$div(
tags$ul(
tags$li('BMI <18.5       : Underweight'),
tags$li('BMI [18.5-24.9] : Normal weight'),
tags$li('BMI [25-29.9]   : Overweight'),
tags$li('BMI >=30        : Obesity')
)
),
h4('Taking into account the values entered by you:'),
p('Your weight:'), verbatimTextOutput("inputweightvalue"),
p('Your height:'), verbatimTextOutput("inputheightvalue"),
h4('Your BMI is:'),verbatimTextOutput("Bmicalc"),
p('Based on your BMI, you are:'),strong(verbatimTextOutput("Bmidiag"))
)
),
# Ideal weight
tabPanel(p(icon("leaf"), "Ideal weight"),
sidebarPanel(
numericInput('height', 'Type your height in metres', 1.70, min = 1.5, max = 3, step = 0.01),
radioButtons("pType", "Choose your sex:",
list("Male", "Female")),
submitButton('Submit')
),
mainPanel(
p('The Ideal Weight Calculator computes the ideal body weight as well as a healthy body weight range based on height, gender, and age. People have pursued an ideal weight formula for centuries, and hundreds of formulas and tables have been created. However, there is still no definite answer regarding the "best" weight for a person. However, the results obtained by most formulas are very good.'),
p('B. J. Devine Formula (1974) is used here:'),
tags$div(
tags$ul(
tags$li('Man    :   50.0 + 2.3 kg per inch over 5 feet'),
tags$li('Woman  :   45.5 + 2.3 kg per inch over 5 feet')
)
),
h4('Your ideal weight is:'),strong(verbatimTextOutput("Idealweight"))
)
),
# Targer and max HR
tabPanel(p(icon("heart"), "Heart rate"),
sidebarPanel(
numericInput('age', 'Type your age in years', 25, min = 1, max = 100, step = 1),
numericInput('weight', 'Type your weight in kilograms', 80) ,
numericInput('height', 'Type your height in metres', 1.70, min = 0.2, max = 3, step = 0.01),
submitButton('Submit')
),
mainPanel(
p('The Body mass index (BMI) is a measure of body fat based on height and weight that applies to adult men and women.'),
p('Regarding the BMI measure, the World Health Organization (WHO) proposes the following classification:'),
tags$div(
tags$ul(
tags$li('BMI <18.5       : Underweight'),
tags$li('BMI [18.5-24.9] : Normal weight'),
tags$li('BMI [25-29.9]   : Overweight'),
tags$li('BMI >=30        : Obesity')
)
),
h4('Taking into account the values entered by you:'),
p('Your weight:'), verbatimTextOutput("inputweightvalue"),
p('Your height:'), verbatimTextOutput("inputheightvalue"),
h4('Your BMI is:'),verbatimTextOutput("bmicalc"),
p('Based on your BMI, you are:'),strong(verbatimTextOutput("bmidiag"))
)
),
# About
tabPanel(p(icon("cog"), "About"),
mainPanel(
# includeMarkdown("include.md")
)
)
)
)
library(shiny)
bmicalc<-function(weight,height) {weight/(height^2)}
bmidiag<-function(weight,height){
BMI_value<-weight/(height^2)
ifelse(BMI_value<18.5,"underweight",ifelse(BMI_value<25,"normal weight",ifelse(BMI_value<30,"overweight","obesity")))
}
maxhr<-function(age) {(220-age)}
targethr<-function(age) {(220-age)*0.7}
idealweight <- function(age, sex){
switch(sex,
M = 50+2.3*(age-1.5),
F = 45.5+2.3*(age-1.5))
}
shinyServer(
function(input, output, session) {
output$inputweightvalue <- renderPrint({input$weight})
output$inputheightvalue <- renderPrint({input$height})
output$inputagevalue <- renderPrint({input$age})
output$Bmicalc <- renderPrint({bmicalc(input$weight,input$height)})
output$Bmidiag <- renderPrint({bmidiag(input$weight,input$height)})
output$Idealweight <- renderPrint({idealweight(input$age,input$sex)})
}
)
shiny::runApp()
runApp( display.mode = "showcase")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("~/R/Dev_dataproducts_coursera/newBMI")
shiny::runApp()
shiny::runApp()
setwd("~/R/Dev_dataproducts_coursera/BMI")
shiny::runApp()
setwd("~/R/Dev_dataproducts_coursera/newBMI")
shiny::runApp(display.mode = 'showcase')
setwd("~/R/Dev_dataproducts_coursera/BMI")
shiny::runApp(display.mode = 'showcase')
setwd("~/R/Dev_dataproducts_coursera/newBMI")
shiny::runApp(display.mode = 'showcase')
setwd("~/R/Dev_dataproducts_coursera/newBMI")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
idweight <- function(age, gender){
if(gender == 'Male'){50+2.3*(age-1.5)}else{45.5+2.3*(age-1.5)}
}
idweight(20,Male)
shiny::runApp()
shiny::runApp(display.mode = 'showcase')
shiny::runApp()
shiny::runApp()
shiny::runApp()
idweight <- function(height, gender){
if(gender == 'Male'){50+2.3*(height-1.5)}else{45.5+2.3*(height-1.5)}
}
idweight(2,"Male")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp(display.mode = 'showcase')
# This is the user-interface definition of a Shiny web application.
# You can find out more about building applications with Shiny here:
#
# http://www.rstudio.com/shiny/
#
library(shiny)
shinyUI(
navbarPage("One stop health calculator",
tabPanel(p(icon("flash"), "Body Mass Index (BMI) Calculator"),
sidebarPanel(
numericInput('age', 'Type your age in years', 25, min = 1, max = 100, step = 1),
numericInput('weight', 'Type your weight in kilograms', 80) ,
numericInput('height', 'Type your height in metres', 1.70, min = 0.2, max = 3, step = 0.01),
submitButton('Submit')
),
mainPanel(
p('The Body mass index (BMI) is a measure of body fat based on height and weight that applies to adult men and women.'),
p('The World Health Organization (WHO) proposes the following classification:'),
tags$div(
tags$ul(
tags$li('BMI <18.5       : Underweight'),
tags$li('BMI [18.5-24.9] : Normal weight'),
tags$li('BMI [25-29.9]   : Overweight'),
tags$li('BMI >=30        : Obesity')
)
),
h4('Taking into account the values entered by you:'),
p('Your weight:'), verbatimTextOutput("inputweightvalue"),
p('Your height:'), verbatimTextOutput("inputheightvalue"),
h4('Your BMI is:'),verbatimTextOutput("estimation"),
p('Based on your BMI, you are:'),strong(verbatimTextOutput("diagbmi"))
)
),
# Ideal weight
tabPanel(p(icon("leaf"), "Ideal weight"),
sidebarPanel(
numericInput('iwheight', 'Type your height in metres', 1.70, min = 1.5, max = 3, step = 0.01),
radioButtons("gender", "Select your gender:",
list("Male", "Female")),
br(),
submitButton('Submit')
),
mainPanel(
p('The Ideal Weight Calculator computes the ideal body weight as well as a healthy body weight range based on height, gender, and age. People have pursued an ideal weight formula for centuries, and hundreds of formulas and tables have been created. However, there is still no definite answer regarding the "best" weight for a person. However, the results obtained by most formulas are very good.'),
p('B. J. Devine Formula (1974) is used here:'),
tags$div(
tags$ul(
tags$li('Man    :   50.0 + 2.3 kg per inch over 5 feet'),
tags$li('Woman  :   45.5 + 2.3 kg per inch over 5 feet')
)
),
h4('Your selected gender is:'),strong(verbatimTextOutput("textgender")),
p('Your selected height is:'),strong(verbatimTextOutput("inputiwheight")),
h4('Your ideal weight in Kg(s) is:'),strong(verbatimTextOutput("idweight"))
)
),
#                # Targer and max HR
#                tabPanel(p(icon("heart"), "Heart rate"),
#                         sidebarPanel(
#                             numericInput('age', 'Type your age in years', 25, min = 1, max = 100, step = 1),
#                             numericInput('weight', 'Type your weight in kilograms', 80) ,
#                             numericInput('height', 'Type your height in metres', 1.70, min = 0.2, max = 3, step = 0.01),
#
#                             submitButton('Submit')
#                         ),
#                         mainPanel(
#                             p('The Body mass index (BMI) is a measure of body fat based on height and weight that applies to adult men and women.'),
#                             p('Regarding the BMI measure, the World Health Organization (WHO) proposes the following classification:'),
#                             tags$div(
#                                 tags$ul(
#                                     tags$li('BMI <18.5       : Underweight'),
#                                     tags$li('BMI [18.5-24.9] : Normal weight'),
#                                     tags$li('BMI [25-29.9]   : Overweight'),
#                                     tags$li('BMI >=30        : Obesity')
#                                 )
#                             ),
#
#                             h4('Taking into account the values entered by you:'),
#                             p('Your weight:'), verbatimTextOutput("inputweightvalue"),
#                             p('Your height:'), verbatimTextOutput("inputheightvalue"),
#                             h4('Your BMI is:'),verbatimTextOutput("bmicalc"),
#                             p('Based on your BMI, you are:'),strong(verbatimTextOutput("bmidiag"))
#
#                         )
#                ),
# About
tabPanel(p(icon("cog"), "About"),
mainPanel(
# includeMarkdown("include.md")
)
)
)
)
input$gender
shiny::runApp()
shiny::runApp()
?if
help if
if
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
setwd("~/R/Dev_dataproducts_coursera/final project")
slidify::demo.Rmd
slidify(demo.Rmd)
library(slidify)
slidify(demo.Rmd)
setwd("~/R/Dev_dataproducts_coursera/final project")
slidify(demo.html)
author('test')
slidify('Index.Rmd')
library(knitr)
browseURL(Index.html)
browseURL("Index.html")
slidify('Index.Rmd')
browseURL("Index.html")
slidify('Index.Rmd')
browseURL("Index.html")
slidify('Index.Rmd')
browseURL("Index.html")
shiny::runApp('~/R/Dev_dataproducts_coursera/newBMI')
setwd("~/R/Dev_dataproducts_coursera/final project/test")
slidify('Index.Rmd')
browseURL("Index.html")
slidify('Index.Rmd')
browseURL("Index.html")
slidify('Index.Rmd')
browseURL("Index.html")
slidify('Index.Rmd')
browseURL("Index.html")
slidify('Index.Rmd')
browseURL("Index.html")
slidify('Index.Rmd')
browseURL("Index.html")
slidify('Index.Rmd')
browseURL("Index.html")
slidify('Index.Rmd')
browseURL("Index.html")
slidify('Index.Rmd')
browseURL("Index.html")
slidify('Index.Rmd')
browseURL("Index.html")
shiny::runApp('~/R/Dev_dataproducts_coursera/newBMI')
shiny::runApp('~/R/Dev_dataproducts_coursera/newBMI')
shiny::runApp('~/R/Dev_dataproducts_coursera/newBMI')
slidify('Index.Rmd')
browseURL("Index.html")
slidify('Index.Rmd')
slidify('Index.Rmd')
browseURL("Index.html")
